---
Installation
---


For installation, a [Pivotal Cloud Foundry](https://network.pivotal.io/products/pivotal-cf) Administrator initially imports the [Service Broker for AWS](https://network.pivotal.io/products/p-aws-services) package into Pivotal Cloud Foundry Operations Manager.

###Installation Prerequisites

* Pivotal Cloud Foundry version 1.6 or later
* Amazon Web Services (AWS) account setup (see below) has been completed


###Setting up AWS

In order for the Service Broker for AWS to create and manage AWS resources, the following steps need to be performed:

1. Create a policy:
Create a new policy in the AWS IAM console called PCFInstallationPolicy with the following policy document text:
{

    "AttachedPolicies": [
        {
            "PolicyName": "AmazonRDSFullAccess",
            "PolicyArn": "arn:aws:iam::aws:policy/AmazonRDSFullAccess"
        },
        {
            "PolicyName": "IAMFullAccess",
            "PolicyArn": "arn:aws:iam::aws:policy/IAMFullAccess"
        }
    ]
}


2. Create an IAM user:
Create a new IAM user which will be used for the PCF Cluster (if you have more than one PCF installation, you should create an AWS IAM user for each one). Note down the AWS Access Key ID and Secret Access Key for the PCF user account. 

1. Create a Service Broker Configuration Database in AWS:
The Service Broker for AWS stores configuration information in a PostgreSQL database that must be created in advance. Log into the AWS Console and create an RDS PostgreSQL database for production purposes, with the smallest DB instance class (db.t2.micro), Multi-AZ, SSD Storage and 5GB of Allocated Storage. Use "pcf-aws-services" for the DB Instance Identifier. Note the Database IP, Database Port, admin user, admin password and Database Name. 

	

###Installing via Ops Manager

To install the Service Broker for AWS tile in Ops Manager, please follow the steps listed below:

1. Ensure the installation pre-requisites listed above are completed. 

2. Download the product file from [Pivotal Network](https://network.pivotal.io/products)

1. Upload the product file to the Ops Manager Installation Dashboard (via the 'Import a Product' button).

1. Click **Add** next to the uploaded product description in the Available Products view to add this product to your staging area.

1. Click on the newly added tile to enter the required Tile Configuration settings as described below.

1. Click **Apply Changes** to install the product.

<img src="images/aws-sb-install.png" width=900 />
<br/>


###Ops Manager Settings

From step 5 above, go to the 'Settings' Tab after clicking on the Service Broker for AWS tile and update the "AWS Config" configuration settings. 

####AWS Config

1. Enter the AWS Access Key ID and the Secret Access Key that you saved earlier. 
2. Select the AWS Region that you would like to use as the default (you can change this later for a particular service). 
3. Enter the Availability Zone that you would like to use as the default (used only if Multi-AZ is not selected)
4. The broker automatically creates AWS Tags for the Service Plan GUID and the Org-Space GUID. You can also configure default tags to be added for each AWS resource by entering them in the Default Tags text box, separated by a space. 
e.g. owner=operations env=production app=payroll

<img src="images/aws-sb-awsconfig.png" width=900 />



####Broker Config
This section configures the Service Broker settings. 
You can run multiple instances of the service broker for redundancy by setting the App Instances value (default 2). 

The Service Broker needs a PostgreSQL database to store its configuration. You can use an existing internal database or create one in AWS (Refer to the earlier section on Setting Up AWS). 

You will need to enter:

* Database Host - The IP address of the database server
* Database Port - The port number (5432 for Postgres)
* The Database Username - The login name for the database user
* Database Password	 - The password for the database user
* Database Name - The name of the database


If you would like the traffic to this database to be encrypted, you can add an SSL certificate. 

<img src="images/aws-sb-brokerconfig.png" width=900  />


####RDS Config
This is where you configure the RDS service and create pre-defined Service Plans for App Developers to use. 

You can set the default AWS Region for this service and set a default Availability Zone for RDS database instances.  

For quick setup, there are several default plans already created. You can edit and save these plans or create additional custom plans by clicking the **Add** button. 

The default plans include:
1. basic - For small projects and during development.
2. standard - For a small production database, multi-AZ, 2vCPU, 7.5GB
3. premium - For a mid-sized database, multi-AZ, 4 vCPU, 15GB
4. enterprise - For a large database, multi-AZ, 8 vCPU, 32GB

Note that if you edit an existing service plan, only future instances of that services plan will be changed. You will need to ask your Admin to modify existing instances. 

<img src="images/aws-sb-rdsconfig.png" width=900  />



<img src="images/aws-sb-editplan.png" width=900  />

For the PostgreSQL service, each service plan must have the following:

- Plan Name: this identifies the plan in the Marketplace
- Plan Description: an overview description of the service plan
- Plan Features: a list of features displayed in Apps Manager
- Engine: this is always "postgres"
- Engine Version: the database version you would like to utilize
- Db Instance Class: the hardware size on which to run the database
- Allocated Storage (GB): the amount of storage allocated to the database
- Storage Type: One of Magnetic, SSD or Provisioned IOPS (io1)
- IOPS (only if your storage type is io1): the IOPS rate for the database instance
- Backup Retention Period: how long to retain backups, typically 7 days
- Copy Tags to Snapshot: whether to tag the database snapshots
- Multi AZ: whether to automatically run in multiple availability zones

<img src="images/aws-sb-addplan.png" width=900  />

###The Marketplace
At this point, all orgs and spaces will have visibility of the new services in the Marketplace and can create service instances based on these services. 

<img src="images/aws-sb-marketplace.png"  /> 


###Service Broker for AWS
The Service Broker for AWS installs in the “system” org in a space called “iaas-brokers”. The app is called “aws-services-broker”. 

